복합 문제 1번 풀이 
(1). 표준 라이브러리를 사용하면 불필요한 시스템 호출을 줄여 CPU 오버헤드를 낮출 수 있다.
(2). 표준 라이브러리를 사용하면 코드의 이식성이 높아져 다양한 환경에서 실행할 수 있다. 
(3). 표준 라이브러리를 사용하면 오류 처리 코드가 간결해지고, 안전성이 향상된다. 
(4). 표준 라이브러리를 사용하면 더 간결한 코드 작성이 가능하여 유지보수가 쉬워진다 
결론 : 표준 라이브러리 함수는 시스템 호출을 보다 효율적이고 사용하기 편리한 형태로 감싼 것

복한 문제 3번 풀이 
운영제체가 인터럽트를 효과적으로 활용하면 CPU가 유휴 상태로 있는 시간을 줄이고, 여러 작업을 동시에 처리할 수 있도록 도와준다 
(1). I/O 대기 시간 최소화 : CPU가 I/O에 비해 연산속도가 매우 빨라 작업을 기다리는 동안 다른 작업을 수행 가능하다
(2). 시분할 처리(멀티태스킹) : 여러 프로세스를 빠르게 전환하면서 CPU를 지속적으로 활용할 수 있다. 
(3). 우선순위 관리 : 긴급한 작업을 빠르게 처리하여 시스템 성능을 최적화한다. 
결론 : 인터럽트는 CPU가 불필요하게 기다리는 시간을 줄이고, 중요한 작업을 우선적으로 처리할 수 있도록 도와준다. 
